{"version":3,"file":"siema.component.js","sourceRoot":"","sources":["../src/ngx-siema/siema.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\nimport Siema from 'siema';\r\n\r\nimport { NgxSiemaService } from './siema.service';\r\n\r\nexport interface NgxSiemaOptions {\r\n  selector: string;\r\n  duration?: number;\r\n  easing?: string;\r\n  perPage?: any;\r\n  startIndex?: number;\r\n  draggable?: boolean;\r\n  threshold?: number;\r\n  loop?: boolean;\r\n  onInit?: Function;\r\n  onChange?: Function;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-siema-slide',\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: flex;\r\n      }\r\n    `,\r\n  ],\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class NgxSiemaSlideComponent {\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-siema',\r\n  template: `\r\n    <div class=\"{{ ngxClass }}\">\r\n      <ng-content select=\"ngx-siema-slide\"></ng-content>\r\n    </div>\r\n  `,\r\n})\r\nexport class NgxSiemaComponent implements AfterViewInit, OnInit, OnDestroy {\r\n\r\n  @Input() options: NgxSiemaOptions;\r\n\r\n  @Output() next = new EventEmitter<any>();\r\n  @Output() prev = new EventEmitter<any>();\r\n  @Output() goTo = new EventEmitter<any>();\r\n  @Output() remove = new EventEmitter<any>();\r\n  @Output() insert = new EventEmitter<any>();\r\n  @Output() prepend = new EventEmitter<any>();\r\n  @Output() append = new EventEmitter<any>();\r\n  @Output() destroy = new EventEmitter<any>();\r\n  @Output() currentSlide = new EventEmitter<any>();\r\n\r\n  ngxClass: string;\r\n\r\n  private instance: any;\r\n\r\n  private nextSubscription: Subscription;\r\n  private prevSubscription: Subscription;\r\n  private goToSubscription: Subscription;\r\n  private removeSubscription: Subscription;\r\n  private insertSubscription: Subscription;\r\n  private prependSubscription: Subscription;\r\n  private appendSubscription: Subscription;\r\n  private destroySubscription: Subscription;\r\n  private currentSlideSubscription: Subscription;\r\n\r\n  constructor(private ngxSiemaService: NgxSiemaService) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance = new Siema(this.options);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngxClass = this.options.selector.replace('.', '');\r\n\r\n    this.nextSubscription = this.ngxSiemaService.onNext()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        numbers: number,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.next(data.numbers, () => {\r\n            this.next.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.prevSubscription = this.ngxSiemaService.onPrev()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        numbers: number,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.prev(data.numbers, () => {\r\n            this.prev.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.goToSubscription = this.ngxSiemaService.onGoTo()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        index: number,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.goTo(data.index, () => {\r\n            this.goTo.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.removeSubscription = this.ngxSiemaService.onRemove()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        index: number,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.remove(data.index, () => {\r\n            this.remove.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.insertSubscription = this.ngxSiemaService.onInsert()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        item: any,\r\n        index: number,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.insert(data.item, data.index, () => {\r\n            this.insert.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.prependSubscription = this.ngxSiemaService.onPrepend()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        item: any,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.prepend(data.item, () => {\r\n            this.prepend.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.appendSubscription = this.ngxSiemaService.onAppend()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        item: any,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.append(data.item, () => {\r\n            this.append.emit({\r\n              selector: this.options.selector,\r\n              currentSlide: this.instance.currentSlide,\r\n            });\r\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.destroySubscription = this.ngxSiemaService.onDestroy()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        restoreMarkup: boolean,\r\n        listener: BehaviorSubject<{ selector: string }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.instance.destroy(data.restoreMarkup, () => {\r\n            this.destroy.emit({\r\n              selector: this.options.selector,\r\n            });\r\n            data.listener.next({ selector: this.options.selector });\r\n          });\r\n        }\r\n      });\r\n\r\n    this.currentSlideSubscription = this.ngxSiemaService.onCurrentSlide()\r\n      .subscribe((data: {\r\n        selector: string,\r\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\r\n      }) => {\r\n        if (this.compareSelectors(data.selector) && this.instance) {\r\n          this.currentSlide.emit({\r\n            selector: this.options.selector,\r\n            currentSlide: this.instance.currentSlide,\r\n          });\r\n          data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      setTimeout(() => {\r\n        this.instance.destroy();\r\n        this.instance = null;\r\n      });\r\n    }\r\n\r\n    this.nextSubscription.unsubscribe();\r\n    this.prevSubscription.unsubscribe();\r\n    this.goToSubscription.unsubscribe();\r\n    this.removeSubscription.unsubscribe();\r\n    this.insertSubscription.unsubscribe();\r\n    this.prependSubscription.unsubscribe();\r\n    this.appendSubscription.unsubscribe();\r\n    this.destroySubscription.unsubscribe();\r\n    this.currentSlideSubscription.unsubscribe();\r\n  }\r\n\r\n  onNext(numbers: number = 1) {\r\n    this.instance.next(numbers, this.next.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onPrev(numbers: number = 1) {\r\n    this.instance.prev(numbers, this.next.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onGoTo(index: number) {\r\n    this.instance.goTo(index, this.goTo.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onRemove(index: number) {\r\n    this.instance.remove(index, this.remove.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onInsert(item: any, index: number) {\r\n    this.instance.insert(item, index, this.insert.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onPrepend(item: any) {\r\n    this.instance.prepend(item, this.prepend.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onAppend(item: any) {\r\n    this.instance.append(item, this.append.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onDestroy(restoreMarkup: boolean = false) {\r\n    this.instance.destroy(restoreMarkup, this.destroy.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    }));\r\n  }\r\n\r\n  onCurrentSlide() {\r\n    this.currentSlide.emit({\r\n      currentSlide: this.instance.currentSlide,\r\n    });\r\n  }\r\n\r\n  private compareSelectors(selector: string) {\r\n    return !selector || selector === this.options.selector;\r\n  }\r\n}\r\n"]}